"""
Django settings for snapshop project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
import dj_database_url
import sentry_sdk
from django.template.loader import get_template, render_to_string
from django.utils.translation import gettext_lazy as _
from sentry_sdk.integrations.django import DjangoIntegration

import snapshop

BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/
SECRET_KEY = os.environ.get("CZECHTARZAN_SECRET_KEY")

DEBUG = os.environ.get("DEBUG", "False") == "True"

ENV = os.environ.get("ENV", "PROD").upper()

BASE_URL = os.environ.get("BASE_URL")

ADMINS = (("Jan Unar", "johnny@unar.dev"),)

SECURE_SSL_REDIRECT = True

ALLOWED_HOSTS = [
    "127.0.0.1",
    "localhost",
    "ab-stage.herokuapp.com",
    "adambuzek.cz",
]

INTERNAL_IPS = ["127.0.0.1"]

SITE_ID = 1
# Application definition

INSTALLED_APPS = [
    "users",
    # Development static files serving
    "whitenoise.runserver_nostatic",
    # Overriding 3rd party
    "django_checkbox_normalize",
    "modeltranslation",
    "jet.dashboard",
    "jet",
    "polymorphic",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    # 3rd party
    "sorl.thumbnail",
    "formtools",
    "djrichtextfield",
    "solo",
    "adminsortable2",
    "django_cleanup.apps.CleanupConfig",
    "djmoney",
    # local
    "core.apps.CoreConfig",
    "shop.apps.ShopConfig",
    "mails.apps.MailsConfig",
    "automations.apps.AutomationsConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_currentuser.middleware.ThreadLocalUserMiddleware",
    "django_referrer_policy.middleware.ReferrerPolicyMiddleware",
]

DEFAULT_AUTO_FIELD = "django.db.models.AutoField"

X_FRAME_OPTIONS = "SAMEORIGIN"

REFERRER_POLICY = "origin"

AUTH_USER_MODEL = "users.ShopUser"

ROOT_URLCONF = "snapshop.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": ["templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "core.settings_context_processor.global_context",
            ],
        },
    },
]

WSGI_APPLICATION = "snapshop.wsgi.application"

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
    }
}

# Heroku: Update database configuration from $DATABASE_URL.
db_from_env = dj_database_url.config()
DATABASES["default"].update(db_from_env)

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "cs"
TIME_ZONE = "Europe/Prague"
USE_I18N = True
USE_L10N = True
USE_TZ = True
DATE_FORMAT = "d/m/Y"
LANGUAGES = [
    ("cs", _("Czech")),
    ("en", _("English")),
]
LOCALE_PATHS = (os.path.join(BASE_DIR, "locale"),)

CURRENCIES = ("CZK", "EUR")

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATIC_URL = "/static/"
STATICFILES_STORAGE = "whitenoise.storage.CompressedStaticFilesStorage"

MEDIA_URL = "/media/"

THUMBNAIL_QUALITY = 75
THUMBNAIL_PRESERVE_FORMAT = True

# USE AWS S3 to serve media files on production
if ENV != "LOCAL":
    AWS_ACCESS_KEY_ID = os.environ.get("AWS_ACCESS_KEY_ID")
    AWS_SECRET_ACCESS_KEY_ID = os.environ.get("AWS_SECRET_ACCESS_KEY_ID")
    AWS_STORAGE_BUCKET_NAME = os.environ.get("AWS_BUCKET_NAME")
    AWS_S3_REGION_NAME = "eu-central-1"
    AWS_S3_OBJECT_PARAMETERS = {"ContentDisposition": "attachment"}
    AWS_S3_ADDRESSING_STYLE = "virtual"
    DEFAULT_FILE_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"

# LOGGING SETTINGS
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": (
                    "%(asctime)s [%(process)d] [%(levelname)s] "
                    + "pathname=%(pathname)s lineno=%(lineno)s "
                    + "funcname=%(funcName)s %(message)s"
            ),
            "datefmt": "%Y-%m-%d %H:%M:%S",
        },
        "simple": {"format": "%(levelname)s %(message)s"},
    },
    "handlers": {
        "null": {
            "level": "DEBUG",
            "class": "logging.NullHandler",
        },
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "verbose",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["console"],
            "level": "INFO",
        },
    },
}

DJRICHTEXTFIELD_CONFIG = {
    "js": [
        "//cdn.tiny.cloud/1/9wpw1tnoa3rxh8vjhnq3a2nk1mzgx35pklzripp4nzzoqhpj/tinymce/5/tinymce.min.js"
    ],
    "init_template": "djrichtextfield/init/tinymce.js",
    "settings": {  # TinyMCE
        "menubar": False,
        "plugins": [
            "advlist autolink lists link image charmap print preview anchor",
            "searchreplace visualblocks code codesample fullscreen template",
            "insertdatetime media table paste code help wordcount paste autosave",
        ],
        "toolbar": "undo redo | formatselect | "
                   + "bold italic backcolor | alignleft aligncenter "
                   + "alignright alignjustify | bullist numlist outdent indent | codesample | link image anchor | "
                   + "removeformat | template |code help",
        "width": "100%",
        "height": 350,
        "image_caption": True,
    },
}

LOGIN_URL = "/login/"
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"

JET_THEMES = [
    {
        "theme": "default",  # theme folder name
        "color": "#47bac1",  # color of the theme's button in user menu
        "title": "Default",  # theme title
    },
    {"theme": "green", "color": "#44b78b", "title": "Green"},
    {"theme": "light-green", "color": "#2faa60", "title": "Light Green"},
    {"theme": "light-violet", "color": "#a464c4", "title": "Light Violet"},
    {"theme": "light-blue", "color": "#5EADDE", "title": "Light Blue"},
    {"theme": "light-gray", "color": "#222", "title": "Light Gray"},
]

# Sentry
if ENV != "LOCAL":
    sentry_sdk.init(
        dsn="https://3f90a8d1447d45828409360df5c6b388@o522271.ingest.sentry.io/6031517",
        integrations=[DjangoIntegration()],
        traces_sample_rate=1.0,
        send_default_pii=True,
        release=f"snapshop@{snapshop.VERSION}",
        environment=ENV,
    )

# GOPAY CONFIG
GOPAY_URL = os.environ.get("GOPAY_URL")
GOPAY_GOID = os.environ.get("GOPAY_GOID")
GOPAY_CLIENT_ID = os.environ.get("GOPAY_CLIENT_ID")
GOPAY_CLIENT_SECRET = os.environ.get("GOPAY_CLIENT_SECRET")
GOPAY_IS_PRODUCTION = ENV == "PROD"

# EMAIL
EMAIL_HOST = "smtp.titan.email"
EMAIL_HOST_USER = os.environ.get("EMAIL_USER")
EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_PASSWORD")
EMAIL_PORT = 465
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_USE_SSL = True

ADMIN_EMAIL = "info@adambuzek.cz"
SUPPORT_EMAIL = "info@adambuzek.cz"
DEFAULT_FROM_EMAIL = ADMIN_EMAIL
SERVER_EMAIL = ADMIN_EMAIL
